{"version":3,"sources":["../../src/bin/atomiq-make.js"],"names":[],"mappings":";;;;AAAA;;;;AACA;;;;;;AAEA,IAAI,MAAM,IAAI,GAAJ,CAAQ,CAChB,CAAE,OAAF,EAAW,EAAE,aAAa,kDAAb,EAAiE,QAAQ,KAAR,EAA9E,CADgB,EAEhB,CAAE,OAAF,EAAW,EAAE,aAAa,kCAAb,EAAiD,QAAQ,KAAR,EAA9D,CAFgB,EAGhB,CAAE,MAAF,EAAU,EAAE,aAAa,kDAAb,EAAiE,QAAQ,IAAR,EAA7E,CAHgB,EAIhB,CAAE,OAAF,EAAW,EAAE,aAAa,wCAAb,EAAuD,QAAQ,KAAR,EAApE,CAJgB,EAKhB,CAAE,OAAF,EAAW,EAAE,aAAa,iDAAb,EAAgE,QAAQ,KAAR,EAA7E,CALgB,CAAR,CAAN;;;;;;;AAQJ,uBAAyB,6BAAzB,oGAA8B;;;QAApB,qBAAoB;QAAf,uBAAe;;AAC5B,wBACG,OADH,CACW,GADX,EAEG,WAFH,CAEe,MAAM,WAAN,CAFf,CAGG,MAHH,CAGU,MAAM,MAAN,CAHV,CAD4B;GAA9B;;;;;;;;;;;;;;;;AAQA,oBAAI,KAAJ,CAAU,QAAQ,IAAR,CAAV;;;;;AAKA,SAAS,KAAT,GAAiB;AACf,MAAM,MAAM,qBAAM,YAAN,CAAN,CADS;AAEf,MAAI,kBAAJ,EAFe;CAAjB;;;;;;AASA,SAAS,KAAT,GAAiB;AACf,UADe;AAEf,MAAM,MAAM,qBAAM,YAAN,CAAN,CAFS;AAGf,MAAI,4BAAJ,EAHe;CAAjB;;;;;;AAUA,SAAS,IAAT,GAAgB;AACd,UADc;AAEd,MAAM,MAAM,qBAAM,WAAN,CAAN,CAFQ;AAGd,MAAI,qCAAJ,EAHc;CAAhB;;;;;AASA,SAAS,KAAT,GAAiB;AACf,SADe;AAEf,MAAM,MAAM,qBAAM,YAAN,CAAN,CAFS;AAGf,MAAI,8BAAJ,EAHe;CAAjB;;;;;AASA,SAAS,KAAT,GAAiB;AACf,UADe;AAEf,MAAM,MAAM,qBAAM,YAAN,CAAN,CAFS;AAGf,MAAI,wDAAJ,EAHe;CAAjB","file":"atomiq-make.js","sourcesContent":["import cli from 'commander';\nimport debug from 'debug';\n\nlet map = new Map([\n  [ 'clean', { description: 'Removes project build artifacts (dist directory)', action: clean }],\n  [ 'babel', { description: 'Transpiles src to dist directory', action: babel }],\n  [ 'dist', { description: 'Ensures all non-js files are also copied to dist', action: dist }],\n  [ 'image', { description: 'Build the Docker image for the project', action: image }],\n  [ 'build', { description: 'Run all tasks required for building the project', action: build }]\n]);\n\nfor (let [key, value] of map) {\n  cli\n    .command(key)\n    .description(value.description)\n    .action(value.action)\n    ;\n}\n\ncli.parse(process.argv);\n\n/**\n * Removes the dist directory.\n */\nfunction clean() {\n  const log = debug('make:clean');\n  log('Deleting dist...');\n}\n\n/**\n * Transpile all the ES6 files in src and place\n * ES5 files and sourcemaps in the dist directory.\n */\nfunction babel() {\n  clean();\n  const log = debug('make:babel');\n  log('Transpiling src to dist...');\n}\n\n/**\n * Copies all files over to the dist directory\n * (not just the transpiled sources).\n */\nfunction dist() {\n  babel();\n  const log = debug('make:dist');\n  log('Copying all non-js files to dist...');\n}\n\n/**\n * Build the Docker image for the project.\n */\nfunction image() {\n  dist();\n  const log = debug('make:image');\n  log('Building the Docker image...');\n}\n\n/**\n * Ensures all build tasks are performed for building the project.\n */\nfunction build() {\n  image();\n  const log = debug('make:build');\n  log('Running all tasks required for building the project...');\n}\n"]}