{"version":3,"sources":["../../../src/lib/io/prompt.js"],"names":[],"mappings":";;;;;QAEsB,U,GAAA,U;;AAFtB;;AAEO,SAAe,UAAf,CAA0B,OAA1B;AAAA,MACD,WADC,EASD,WATC,EAiBD,OAjBC;AAAA;AAAA;AAAA;AAAA;AACD,qBADC,GACa;AAChB,kBAAM,MADU;AAEhB,kBAAM,MAFU;AAGhB,qBAAS,MAHO;AAIhB,qBAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAJO;AAKhB,qBAAS;AALO,WADb;AASD,qBATC,GASa;AAChB,kBAAM,MADU;AAEhB,kBAAM,OAFU;AAGhB,qBAAS,MAHO;;AAKhB,qBAAS;AAAA,qBAAW,QAAQ,IAAnB;AAAA;AALO,WATb;AAAA;AAAA,0CAiBe,sBAAO,CACzB,WADyB,EAEzB,WAFyB,CAAP,CAjBf;;AAAA;AAiBD,iBAjBC;;;AAsBL,kBAAQ,IAAR,GAAe,QAAQ,IAAvB;AACA,kBAAQ,IAAR,GAAe,QAAQ,IAAvB;;AAvBK,2CAyBE,OAzBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"prompt.js","sourcesContent":["import { prompt } from 'inquirer'\n\nexport async function newProject(context) {\n  let projectType = {\n    name: 'type',\n    type: 'list',\n    message: 'type',\n    choices: ['api', 'app', 'lib'],\n    default: 'api'\n  }\n\n  let projectName = {\n    name: 'name',\n    type: 'input',\n    message: 'name',\n    // use project type from previous questions as default project name\n    default: answers => answers.type\n  }\n\n  let choices = await prompt([\n    projectType,\n    projectName\n  ])\n\n  context.type = choices.type\n  context.name = choices.name\n\n  return context;\n}\n"]}